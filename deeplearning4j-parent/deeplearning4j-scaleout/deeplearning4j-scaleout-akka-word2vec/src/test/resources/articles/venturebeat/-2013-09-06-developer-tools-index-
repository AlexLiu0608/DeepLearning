5
Companies making developer tools are in a cutthroat battle for customers, revenue, and mindshare.
The battle has many fronts: The growing army of developers, the need for speed on software development, the popularity of work-from-anywhere and remote team models, and the growth of mobile coding all add up to a broad market ripe for innovation and monetization.
An army of devs: The surging need for developers in a software-oriented economy has led to the rise of coding bootcamps and online training courses. The learn-to-code craze has spread its roots into working-class high schools, corporate cubicles, and every place where individuals seek more exciting careers with an almost infinite ceiling for salaries. The explosion of new developers has led to a correlating explosion in the need for easy-to-use tools for beginners and moderately skilled coders.
Rapid development: Software development has also increased in pace significantly due to trends such as the lean startup movement, minimum viable product/rapid prototyping, and continuous deployment. In the 1990s, you could release a boxed software package once a year, taking the time to debug, test, and thoroughly perfect the product prior to shipping. Today, flaw-filled “alpha” and “beta” releases often occur within weeks of one another, with final and relatively polished products following by a few months. Subsequent releases occur in fast succession, each showing measurable improvements in design, flow, and overall usability and experience. With consumer demand for product improvements accelerating in turn, developers have had to outsource or automate parts of the software-creation process that were once handled in-house, whether those parts be multiplatform expansion, server maintenance, or backend stack architecture. This has led to a fast-growing need for more and better tools to maintain the rapid pace of innovation.
Remote working: Not only is speed a requirement of modern developer tooling. Cloud-based features such as collaboration, code-pairing, and analytics dashboards speak to the popularity of distributed teams (a financial boon for lean startups) as well as work-from-home (or work-from-cafe, work-from-the-train, and so on) models. But developers still derive a great deal of benefit from constant, transparent communication with their coworkers, including business and design team members. This means that startups and divisions within larger companies alike need always-on tools for communication and collaboration. These teams also need remote, real-time access to their own technology stacks, from codebases to servers.
Mobile development: Finally, mobile coding is still a nascent niche in developer tooling. But as the future of computing lies not in desktop boxes but in the palm of the user’s hand, devs need to create for and from mobile devices, including tablets. Cloud-based tools that enable software developers to work on iPads or to manage code repositories from smartphones are becoming more than desirable; they are quickly becoming absolutely necessary. Pioneers in this field stand to define a new segment of the developer-tools marketplace, taking the unique features of mobile devices not as challenges but as opportunities.
With all those factors and needs in mind, we surveyed 200 developers on the most exciting, forward-looking developer tools based in the cloud. These services cover a wide range of needs, from code hosting to application monitoring and backends-as-a-service. All the services have compelling web-based components that impact the nature of the services they offer. Some, such as Adobe’s Creative Cloud and GitHub, manage to merge desktop software and cloud-based features. Others, such as Cloud9 IDE, are entirely web-based with no downloadable components.
Parts of the survey are quantitative; we considered the pure numbers to determine the popularity of a 10 company list of tools.
Editor’s note: A lot of these companies will be present at our upcoming CloudBeat event , Sept. 9-10 in San Francisco, where we’ll be tackling revolutionary cases of cloud adoption. Register today for CloudBeat! They’ll also be present DevBeat 2013 , VentureBeat’s conference for developer topics in November.
But more than that, we strove to deliver a qualitative view of these services based on four main criteria:
Is the service innovative? Does it provide something unique that pairs with developers’ needs for modern tooling and support? Does it build on and reach beyond the services of the recent past? Does it leverage existing technologies in new, unexpected ways?
Does the service contribute to the future of development? Is it both forward-looking and extensible? Does it speak to the trends of the present as well as anticipate the needs of the near future? Does it move development forward, help to speed its pace, or remove roadblocks and bottlenecks for software creators? Does the company show signs of long-term stability and viability, or is it a flash in the pan?
In a multiplatform economy, does the service bridge the gaps between multiple platforms? Using code translation and the power of web-based technologies, does it make it easier and faster for developers to create products for many devices, browsers, and operating systems, regardless of individual skill sets?
Is the service validated by market momentum? Does the developer audience respond favorably to the product? Has the company proven its financial viability, either through revenues or the confidence of knowledgeable investors?
With these criteria and our own data-gathering in mind, here are our findings on the best cloud-based developer tools right now. These findings will change and will be accordingly updated to reflect changes in momentum and developer sentiment throughout the months to come.
Total quantitative survey results
Methodology
We chose 10 services from 10 companies for our initial survey: Google Cloud Playground, Adobe Creative Suite, GitHub, Heroku, Joyent, New Relic, Parse, Urban Airship, Kinvey, and Windows Azure. We asked respondents to identify the services they had used and indicate whether or not they would recommend that service. Invalid and questionable responses (such as responses that rated every service on the list) were discarded. We ended up with 200 valid responses for this round of surveying.
We realize that in this survey, there are some apples/oranges relationships between some of the companies named. The survey is intended to be a very broad overview of a large and growing industry. Rather than direct comparisons of very different services, we hope to provide a general picture of the developer tools landscape as it stands in 2013.
Numeric results
This graph shows the exact number of developers who said they had used and would or would not recommend a particular service. The positive responses are shown in green, with negative responses represented in red. Here, you can see which services generated the strongest sentiment among a developer audience, whether that sentiment was positive or negative.
Percent results
For each service, we also broke down the percentage of positive and negative responses, showing not just the overall sentiment but also which services are the best-liked in this market. For example, while GitHub generated the most sentiment by far, the huge majority of that sentiment was positive. And Adobe’s services, which elicited greater overall sentiment than Joyent’s, were decidedly less liked among developers.
