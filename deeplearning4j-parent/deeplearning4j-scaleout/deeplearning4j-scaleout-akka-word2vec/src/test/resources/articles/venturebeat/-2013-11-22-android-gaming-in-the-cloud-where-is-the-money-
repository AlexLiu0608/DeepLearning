2
Rosen Sharma is the CEO of BlueStacks .
I get asked about once a week, “Can you run these Android games in the cloud?” It’s a seductive idea. No client required, the games run directly on Smart TVs, set-top boxes, or microconsoles like GamePop or GameStick . Manufacturers and cable companies rightly salivate over the prospect of an additional revenue stream via a mobile-gaming-on-TV offering, especially if they can stream it from a faraway land. Ouya has announced it is going to try mobile cloud gaming. The pull is undeniable should someone pull it off.
But is cloud gaming for Android even possible? Facebook, King, Kongregate, and others built large profitable businesses mostly around Flash games in the browser. That could be called cloud gaming. But here we are exploring the possibility of running mobile games in the cloud. That’s an entirely different ball of cheese.
I once saw OnLive founder Steve Perlman give a demo of his service at Stanford. I’ve been in the Valley for 20 years, and I admit it was maybe the best demo I’ve ever seen. He dazzled the audience with blindingly fast feature after magical feature. He instantly played a few graphics-intensive PS3 games with a friend with zero latency. He showed a screen with nine tiles arranged Brady Bunch-style, all showing real-time games being played by others. He zoomed in and out on them in a snap. If Perlman had closed by levitating it would have fit right in.
Of course, at most of these demos, the cloud is sitting right behind the screen. In a way, it is magic after all. Now, recent advances in video compression and streaming technology have made it easier to stream over the Internet, to be sure. H.264 or VP8 can deliver a decent gaming experience through a 6-10Mbps pipe. If you have a fast, low-latency network connection, the games can look pretty good. In geographies like South Korea, Singapore, and even some parts of U.S. (like Stanford), it can work.
Technical hurdles
Amazon launched the “Test Drive” service on its Android app store in March 2011. It’s not an accident that the selection of apps in Test Drive remains extremely limited. You won’t see any Clash of Clans, Candy Crush, or Deer Hunter there. This is because most mobile phones today are based on ARM technology, and most top games need to run that yummy ARM code. Amazon Test Drive is built on x86 – not ARM. There aren’t really any ARM servers today, and there are only two companies with the commercial technology to run ARM-based Android apps on x86 platforms: Intel and BlueStacks. Without one of these, you won’t be able to run even 20 percent of the Top 100 apps in the cloud.
This problem could be solved in two ways:
Build the first cloud using ARM servers. This is technically feasible, though not commercially viable. It would be massively expensive.
Get all the top developers to rewrite their apps. Developers are more focused on building out new levels and creating the next hit game rather than rewriting old ones. This is a nonstarter.
These technical hurdles are why most cloud-based games that you saw on OnLive were older PC titles which were built for Intel platforms. Another big roadblock is cost. For cloud gaming to be feasible, one has to support more than one player per server. For PC-style games, one of the cloud gaming providers recently told me they can run up to eight players off of one server. Let’s be generous and assume it’s 20 players off one server. So for 1,000 simultaneous players, you would need about 50 servers. Running ARM-based apps on Intel servers increases the capacity needed dramatically, increasing the number of servers required nearly fivefold. Google is attempting to solve this problem by using NaCl technology, but that is still many years out. It hasn’t built that barge yet. Server costs to run the most popular Android games in the cloud right now are totally untenable.
Deeper hidden financial costs, ‘Oliver Twist’ revenue
Let’s assume that the server problem is solved. Bandwidth is the other cost hiding under the bed. To stream these games, you need about 8Mbps (megabytes per second). Imagine each user is playing Candy Crush for just five minutes, That’s 300 MB of bandwidth needed per user. One million daily users would suck up about 300 x 1,000,000 MB of data. That’s 300,000 GB of data, or 292 terabytes. One GB costs roughly 10 cents from Amazon’s or Google’s cloud services. So 1M DAU would cost about $30,000/day for the bandwidth alone.
In the mobile world, most apps employ the free-to-play business model. For these game developers, about 2 percent of players pay. Two percent of 1M DAU means about 20,000 pay something. If they paid $1 each every single day, that would be $20,000/day, out of which the developer gets 70 percent, so about $14,000/day. So while most popular games make $1M/day, the issue is that the revenue scales with the DAU so the costs would increase also and make the game unprofitable even at that scale.
One could argue that if 5 percent of players pay and ignoring that server costs are lower that we could break even. But the big assumption is that users will pay something after spending five minutes in the app. This is rarely the case. When was the last time you bought something in a game after five minutes of playing? Purchases are more likely to come over a much longer period of time, if at all. Check out the Top Grossing Apps charts. King, Clash of Clans, and casino apps dominate. People spend hours playing these games. Weeks. If the time spent in a game before you spend a $1 goes from 5 minutes to 10 minutes, the server cost and the bandwidth costs double. Go up to an hour and Katie, lock the door.
Additionally, for each hit game that makes money, thousands don’t. A million games are on Google Play. A very small percentage of them make money. Who will absorb the massive costs of playing all those money-losing games?
A magic trick is not real life
With each technology cycle some problems get solved. We have seen companies like OnLive hit a wall with some of the business challenges inherent in cloud gaming. You could probably do a cloud gaming service for PC games today. But mountain-high hurdles remain to enable free-to-play mobile games optimized for ARM in the cloud.
Rosen is the CEO of BlueStacks, the makers of the App Player and GamePop products that run Android apps on PC and TV, respectively. Prior to BlueStacks, Sharma cofounded Cloud.com (acquired by Citrix), GreenBorder (acquired by Google), VxTreme (acquired by Microsoft), Teros (Acquired by Citrix) and Solidcore (acquired by McAfee). He went on to serve as a CTO and senior vice preident at McAfee until starting BlueStacks. Sharma holds a Ph.D in computer networking from Stanford and Cornell.
