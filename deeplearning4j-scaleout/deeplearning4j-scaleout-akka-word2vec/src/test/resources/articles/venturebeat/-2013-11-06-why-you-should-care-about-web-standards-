0
Editor’s note: Divya Manian is a web engine team project manager at Adobe. She’ll be speaking at DevBeat , our developer conference next week. Register now! Seats are limited and selling fast.
As someone who creates web experiences, I try to find, create, and make better features on the web that help me create the best one possible. You have the power to do it too and determine the future of the web!
High level but hands-on
Our upcoming DevBeat conference , Nov. 12-13 in San Francisco, will have a lot more on this topic. Featuring hacker legends like Stallman, DHH, Rasmus Lerdorf, and Alex Payne, it’s a hands-on developer event packed with:
workshops
live Ask-Me-Anything
hardware hacking
It’s all aimed at boosting your code skills, security knowledge, hardware hacking, and career development. Register now.
Three years ago, I worked as a front-end developer in a design agency, feeling powerless in the face of CSS, HTML, and JavaScript. It seemed that I was at the mercy of whatever browser vendors decided to do, and I was unaware of how to know which feature was ready to use. Then, during the course of Googling for quick solutions for front-end problems, I found an organization that was responsible for standardizing features that browsers can implement . Not only did it exist, but they were actively soliciting feedback from everyday Internet users to make these features better, and they even outlined the design principles that these standards operated by.
W3C , WHATWG,  and  TC39 are organizations that help clearly declare what the web features that we use and love every day exactly stand for. Typically, each feature is part of a specification which is developed within a Working Group . Usually, each specification has one or more editors who actively work on making sure it satisfies all use cases and clearly declares how these features should perform so browsers can implement them. The groups also try to maintain test suites which can be used to confirm that browsers are implementing these features correctly.
This discovery was enlightening and drove me to participate more actively with standards bodies to raise awareness of existing problems and give feedback on suggested syntaxes in terms of readability, maintainability, and so on. Reading the specifications made it obvious how to use a particular feature and easy to understand quickly where the problem was: in my code, in the browser, or in the way the feature was designed.
My work with standards brought me to my team at Adobe, where we represent the voice of designers in the standards world and are working on features that we think would give more power to designers to control the web experience.
If you are ready to get started, here is how you can follow along:
Get a high-level overview of the latest in the world of web standards from Šime Vidas and gather open web topics that interest you.
Find specifications that help solve problems in those topics. Try to understand exactly what each one features.
If sentences in the specification fail to make sense (which happens often with me), ask questions of the editors on the relevant mailing lists or IRC channels .
Test out your understanding of a feature by writing demos and testing them out across browsers, then if you find a discrepancy, isolate the bug and submit a bug report .
Following discussions amongst engineers working on browsers is very useful to a better understanding of how browsers work and how they end up displaying your page correctly. You can find these discussions for open source browsers: Mozilla , WebKit , and Chrome .
As developers and designers, it is in our interest to make the web a better medium. Giving feedback and submitting bugs and incorrect implementations would help in making the web awesome, quicker. So go forth and do your bit to make the web better!
